#!/bin/bash
# Description: Create the management cluster

set -euxo pipefail

# k3d version list k3s
# https://hub.docker.com/r/rancher/k3s/tags
# k3d_args="-i docker.io/rancher/k3s:v1.22.15-k3s1"

args=${k3d_args-}
docker_mirror=${docker_mirror-}
unique_api_port=${unique_api_port-36443}
unique_tls_port=${unique_tls_port-443}
METRICS_GITJOB_PORT=${METRICS_GITJOB_PORT-}
METRICS_CONTROLLER_PORT=${METRICS_CONTROLLER_PORT-}

name=${1-upstream}
offs=${2-0}

if [ -n "$METRICS_CONTROLLER_PORT" ]; then
    args="$args -p "${METRICS_CONTROLLER_PORT}:${METRICS_CONTROLLER_PORT}@server:0""
fi

if [ -n "$METRICS_GITJOB_PORT" ]; then
    args="$args -p "${METRICS_GITJOB_PORT}:${METRICS_GITJOB_PORT}@server:0""
fi

if [ -n "$docker_mirror" ]; then
  TMP_CONFIG="$(mktemp)"
  trap "rm -f $TMP_CONFIG" EXIT

  cat << EOF > "$TMP_CONFIG"
mirrors:
  "docker.io":
      endpoint:
            - $docker_mirror
EOF
  args="$args --registry-config $TMP_CONFIG"
fi

k3d cluster create "$name" \
  --servers 3 \
  --api-port "$unique_api_port" \
  -p "$(( 8080 + offs )):8080@server:0" \
  -p "$(( 8081 + offs )):8081@server:0" \
  -p "$(( 8082 + offs )):8082@server:0" \
  -p "$unique_tls_port:443@server:0" \
  --k3s-arg '--tls-san=k3d-upstream-server-0@server:0' \
  $args
