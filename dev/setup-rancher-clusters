#!/bin/bash

set -eux

if [ ! -d ./.github/scripts ]; then
  echo "please change the current directory to the fleet repo checkout"
  exit 1
fi

public_hostname="${public_hostname-172.18.0.1.sslip.io}"
upstream_ctx="${FLEET_E2E_CLUSTER-k3d-upstream}"
downstream_ctx="${FLEET_E2E_CLUSTER_DOWNSTREAM-k3d-downstream1}"
rancherpassword="${RANCHER_PASSWORD-rancherpassword}"

version="${1-}"
channel="${2-latest}" # latest or alpha
if [ -z "$version" ]; then
  version=$(curl -SsLf "https://releases.rancher.com/server-charts/$channel/index.yaml" | yq -r '.entries | to_entries | .[].value[] | .version' | sort -V | tail -1)
fi

kubectl config use-context "$upstream_ctx"

kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.5.4/cert-manager.yaml
kubectl wait --for=condition=Available deployment --timeout=2m -n cert-manager --all

# set CATTLE_SERVER_URL and CATTLE_BOOTSTRAP_PASSWORD to get rancher out of "bootstrap" mode
helm upgrade rancher "https://releases.rancher.com/server-charts/${channel}/rancher-${version#v}.tgz" \
  --devel \
  --install --wait \
  --create-namespace \
  --namespace cattle-system \
  --set replicas=1 \
  --set hostname="$public_hostname" \
  --set agentTLSMode=system-store \
  --set bootstrapPassword=admin \
  --set "extraEnv[0].name=CATTLE_SERVER_URL" \
  --set "extraEnv[0].value=https://$public_hostname" \
  --set "extraEnv[1].name=CATTLE_BOOTSTRAP_PASSWORD" \
  --set "extraEnv[1].value=$rancherpassword" \
  --set "extraEnv[2].name=CATTLE_AGENT_TLS_MODE" \
  --set "extraEnv[2].value=system-store"

# wait for deployment of rancher
kubectl -n cattle-system rollout status deploy/rancher

# wait for rancher to create fleet namespace, deployment and controller
{ grep -q -m 1 "fleet"; kill $!; } < <(kubectl get deployments -n cattle-fleet-system -w)
kubectl -n cattle-fleet-system rollout status deploy/fleet-controller
{ grep -E -q -m 1 "fleet-agent-local.*1/1"; kill $!; } < <(kubectl get bundles -n fleet-local -w)

./.github/scripts/wait-for-loadbalancer.sh

export cluster_downstream="$downstream_ctx"
./.github/scripts/register-downstream-clusters.sh "$public_hostname"

./.github/scripts/label-downstream-cluster.sh
