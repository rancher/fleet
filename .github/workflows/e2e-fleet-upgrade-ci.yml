# Upgrade Fleet standalone from latest released to dev version
name: E2E Upgrade Fleet Standalone to HEAD

on:
  schedule:
    - cron: '0 8 */2 * *'
  pull_request:

env:
  GOARCH: amd64
  CGO_ENABLED: 0
  SETUP_K3D_VERSION: 'v5.7.1'

jobs:
  fleet-upgrade-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k3s_version:
          - v1.30.2-k3s2
    steps:
      -
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true
      -
        name: Install Ginkgo CLI
        run: go install github.com/onsi/ginkgo/v2/ginkgo
      -
        name: Provision k3d Cluster
        uses: AbsaOSS/k3d-action@v2
        # k3d will automatically create a network named k3d-test-cluster-1 with the range 172.18.0.0/16
        with:
          k3d-version: ${{ env.SETUP_K3D_VERSION }}
          cluster-name: "upstream"
          args: >-
            --agents 1
            --network "nw01"
            --image docker.io/rancher/k3s:${{matrix.k3s_version}}
      -
        name: Deploy Latest Release
        run: |
          ./.github/scripts/deploy-fleet-latest-release.sh
      -
        name: Create example workload
        run: |
          kubectl apply -n fleet-local -f e2e/assets/installation/simple.yaml
      -
        name: Build Fleet Binaries
        run: |
          ./.github/scripts/build-fleet-binaries.sh
      -
        name: Build Docker Images
        run: |
          ./.github/scripts/build-fleet-images.sh
      -
        name: Import Images Into k3d
        run: |
          ./.github/scripts/k3d-import-retry.sh rancher/fleet:dev rancher/fleet-agent:dev -c upstream
      -
        name: Verify Example Workload
        run: |
          # we waited long enough by importing the image first
          kubectl get configmap -n simple-example | grep -q -m 1 "simple-config"
      -
        name: Upgrade to Dev Version
        run: |
          ./.github/scripts/deploy-fleet.sh
      -
        name: Verify Installation
        env:
          FLEET_E2E_NS: fleet-local
        run: |
          ginkgo --github-output --label-filter="!multi-cluster" e2e/installation
      -
        name: Dump Failed Environment
        if: failure()
        run: |
          ./.github/scripts/dump-failed-k3ds.sh
      -
        name: Upload Logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: gha-fleet-e2e-logs-${{ github.sha }}-${{ matrix.k3s_version }}-${{ github.run_id }}
          path: |
            tmp/*.json
            tmp/*.log
          retention-days: 2
