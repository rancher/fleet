#!/bin/bash

set -euxo pipefail

if [ ! -d ./cmd/fleetagent ]; then
  echo "please change the current directory to the fleet repo checkout"
  exit 1
fi

export GOOS=linux
export GOARCH="${GOARCH:-amd64}"
export CGO_ENABLED=0

# fleet agent
go build -gcflags='all=-N -l' -o "bin/fleetagent-linux-$GOARCH" ./cmd/fleetagent
docker build -f package/Dockerfile.agent -t rancher/fleet-agent:dev --build-arg="ARCH=$GOARCH" .

fleet_ctx=$(kubectl config current-context)
k3d image import rancher/fleet-agent:dev -m direct -c "${fleet_ctx#k3d-}"
kubectl delete pod -l app=fleet-agent -n cattle-fleet-local-system

upstream_ctx="${FLEET_E2E_CLUSTER-k3d-upstream}"
downstream_ctx="${FLEET_E2E_CLUSTER_DOWNSTREAM-k3d-downstream1}"
downstream_keyword="${downstream_ctx#k3d-}"
downstream_keyword="${downstream_keyword%[0-9]*}"
if [ "$upstream_ctx" != "$downstream_ctx" ]; then
  for cluster in $(k3d cluster list -o json | \
      jq -r ".[].name | select(. | contains(\"${downstream_keyword}\"))"); do
    k3d image import rancher/fleet-agent:dev -m direct -c "${cluster}"
    kubectl --context "k3d-$cluster" delete pod -l app=fleet-agent -n cattle-fleet-system
  done
fi
