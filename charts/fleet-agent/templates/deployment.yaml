apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: fleet-agent
spec:
  serviceName: fleet-agent
  selector:
    matchLabels:
      app: fleet-agent
  template:
    metadata:
      labels:
        app: fleet-agent
    spec:
      initContainers:
      - env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: '{{ template "system_default_registry" . }}{{.Values.image.repository}}:{{.Values.image.tag}}'
        name: fleet-agent-register
        command:
        - fleetagent
        - register
        {{- if .Values.debug }}
        - --debug
        - --debug-level
        - {{ quote .Values.debugLevel }}
        {{- else }}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            drop:
            - ALL
        {{- end }}
      containers:
      - env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: '{{ template "system_default_registry" . }}{{.Values.image.repository}}:{{.Values.image.tag}}'
        name: fleet-agent
        command:
        - fleetagent
        {{- if .Values.debug }}
        - --debug
        - --debug-level
        - {{ quote .Values.debugLevel }}
        {{- else }}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            drop:
            - ALL
        {{- end }}
        volumeMounts:
          - mountPath: /.kube
            name: kube
      - env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: '{{ template "system_default_registry" . }}{{.Values.image.repository}}:{{.Values.image.tag}}'
        name: fleet-agent-clusterstatus
        command:
        - fleetagent
        - clusterstatus
        {{- if .Values.debug }}
        - --debug
        - --debug-level
        - {{ quote .Values.debugLevel }}
        {{- else }}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          privileged: false
          capabilities:
            drop:
            - ALL
        {{- end }}
      volumes:
        - name: kube
          emptyDir: {}
      serviceAccountName: fleet-agent
      nodeSelector: {{ include "linux-node-selector" . | nindent 8 }}
{{- if .Values.fleetAgent.nodeSelector }}
{{ toYaml .Values.fleetAgent.nodeSelector | indent 8 }}
{{- end }}
      tolerations: {{ include "linux-node-tolerations" . | nindent 8 }}
{{- if .Values.fleetAgent.tolerations }}
{{ toYaml .Values.fleetAgent.tolerations | indent 8 }}
{{- end }}
{{- if not .Values.debug }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
{{- end }}
