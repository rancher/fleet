// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rancher/fleet/internal/cmd/controller/reconciler (interfaces: TargetBuilder)
//
// Generated by this command:
//
//	mockgen --build_flags=--mod=mod -destination=../../../mocks/target_builder_mock.go -package=mocks github.com/rancher/fleet/internal/cmd/controller/reconciler TargetBuilder
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	target "github.com/rancher/fleet/internal/cmd/controller/target"
	v1alpha1 "github.com/rancher/fleet/pkg/apis/fleet.cattle.io/v1alpha1"
	gomock "go.uber.org/mock/gomock"
)

// MockTargetBuilder is a mock of TargetBuilder interface.
type MockTargetBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockTargetBuilderMockRecorder
}

// MockTargetBuilderMockRecorder is the mock recorder for MockTargetBuilder.
type MockTargetBuilderMockRecorder struct {
	mock *MockTargetBuilder
}

// NewMockTargetBuilder creates a new mock instance.
func NewMockTargetBuilder(ctrl *gomock.Controller) *MockTargetBuilder {
	mock := &MockTargetBuilder{ctrl: ctrl}
	mock.recorder = &MockTargetBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTargetBuilder) EXPECT() *MockTargetBuilderMockRecorder {
	return m.recorder
}

// Targets mocks base method.
func (m *MockTargetBuilder) Targets(arg0 context.Context, arg1 *v1alpha1.Bundle, arg2 string) ([]*target.Target, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Targets", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*target.Target)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Targets indicates an expected call of Targets.
func (mr *MockTargetBuilderMockRecorder) Targets(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Targets", reflect.TypeOf((*MockTargetBuilder)(nil).Targets), arg0, arg1, arg2)
}
